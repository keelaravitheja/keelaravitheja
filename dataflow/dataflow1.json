{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Employeedataset",
						"type": "DatasetReference"
					},
					"name": "employeeDataset"
				},
				{
					"dataset": {
						"referenceName": "DepartmentDatadataset",
						"type": "DatasetReference"
					},
					"name": "DepartmentDataSet"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outputdataset",
						"type": "DatasetReference"
					},
					"name": "OutputData",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "joinEmpdatadeptdata"
				},
				{
					"name": "ModifyColumns1",
					"description": "Autogenerated by data preview actions"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmployeID as string,",
				"          Name as string,",
				"          Country as string,",
				"          Department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employeeDataset",
				"source(output(",
				"          DepartmentID as string,",
				"          DepartmentName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DepartmentDataSet",
				"employeeDataset, DepartmentDataSet join(Department == DepartmentID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinEmpdatadeptdata",
				"joinEmpdatadeptdata derive(Country = upper(Country)) ~> ModifyColumns1",
				"ModifyColumns1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['empanddeptdata'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          EmployeID,",
				"          EmpName = Name,",
				"          Country,",
				"          DepartmentName",
				"     ),",
				"     partitionBy('hash', 1)) ~> OutputData"
			]
		}
	}
}